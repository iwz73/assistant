o# install
tar xvfz redis-3.2.6.tar.gz -C /opt/
make install
make test

# set cluster
mkdir -p /tmp/redis/cluster/7000
mkdir -p /tmp/redis/cluster/7001
mkdir -p /tmp/redis/cluster/7002
mkdir -p /tmp/redis/cluster/7003
mkdir -p /tmp/redis/cluster/7004
mkdir -p /tmp/redis/cluster/7005

cp /opt/redis-3.2.11/redis.conf /tmp/redis/cluster/7000
vi /tmp/redis/cluster/7000/redis.conf
	port 7000
	daemonize yes
	cluster-enabled yes
	cluster-config-file nodes-7000.conf
	cluster-node-timeout 15000
	appendonly yes
cp /tmp/redis/cluster/7000/redis.conf /tmp/redis/cluster/7001
vi /tmp/redis/cluster/7001/redis.conf
	port 7001
	cluster-config-file nodes-7001.conf
cp /tmp/redis/cluster/7000/redis.conf /tmp/redis/cluster/7002
vi /tmp/redis/cluster/7002/redis.conf
	port 7002
	cluster-config-file nodes-7002.conf
cp /tmp/redis/cluster/7000/redis.conf /tmp/redis/cluster/7003
vi /tmp/redis/cluster/7003/redis.conf
	port 7003
	cluster-config-file nodes-7003.conf
cp /tmp/redis/cluster/7000/redis.conf /tmp/redis/cluster/7004
vi /tmp/redis/cluster/7004/redis.conf
	port 7004
	cluster-config-file nodes-7004.conf
cp /tmp/redis/cluster/7000/redis.conf /tmp/redis/cluster/7005
vi /tmp/redis/cluster/7005/redis.conf
	port 7005
	cluster-config-file nodes-7005.conf

/opt/redis-3.2.11/src/redis-server /tmp/redis/cluster/7000/redis.conf
/opt/redis-3.2.11/src/redis-server /tmp/redis/cluster/7001/redis.conf
/opt/redis-3.2.11/src/redis-server /tmp/redis/cluster/7002/redis.conf
/opt/redis-3.2.11/src/redis-server /tmp/redis/cluster/7003/redis.conf
/opt/redis-3.2.11/src/redis-server /tmp/redis/cluster/7004/redis.conf
/opt/redis-3.2.11/src/redis-server /tmp/redis/cluster/7005/redis.conf

gpg2 --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3
curl -L get.rvm.io | bash -s stable
source /usr/local/rvm/scripts/rvm
rvm list known
rvm install 2.4.1
rvm use 2.4.1

yum install -y ruby
yum install -y rubygems
gem install redis



# start redis server
redis-server --port 6379

# shutdown redis server
redis-cli SHUTDOWN

# start redis client
redis-cli -h 127.0.0.1 -p 6379

# change database (0 ~ 16)
SELECT 0

# data type command
TYPE key
#     string
SET key "0"
GET key
KEYS *
EXISTS key
GETBIT key 0
SETBIT key 0 1
BITCOUNT key
DEL key
INCR increment
INCRBY increment "3"
INCRBYFLOAT increment "5.5"
INCRBYFLOAT increment "2E+3"
DECR decrement
DECRBY decrement "3"
SET string "string"
APPEND string "append"
STRLEN string
MSET key_0 "value_0" key_1 "1"
MGET key_0 key_1
BITOP OR bit_operation key_0 key_1
#     hash
HSET hash field_0 "value_0"
HGET hash field_0
HMSET hash field_0 "value_0" field_1 "value_1"
HMGET hash field_0 field_1
HGETALL hash
HEXISTS hash field_0
HSETNX hash field_2 "set if not exists"
HINCRBY hash field_3 3
HKEYS hash
HVALS hash
HLEN hash
HDEL hash field_0 field_1
#     list
LPUSH list "left push 0" "left push 1" "left push 2"
RPUSH list "right push 0" "right push 1" "right push 2"
LPOP list
RPOP list
RPOPLPUSH list list
LLEN list
LRANGE list 1 3
LREM list 0 2
LINDEX list 0
LSET list 1 1
LTRIM list 0 2
LINSERT list BEFORE "right push 0" "before"
LINSERT list AFTER "right push 0" "after"
LPUSH priority_list_0 "priority_0_0" "priority_0_1" "priority_0_2"
LPUSH priority_list_1 "priority_1_0" "priority_1_1" "priority_1_2"
LPUSH priority_list_2 "priority_2_0" "priority_2_1" "priority_2_2"
BLPOP priority_list_0 priority_list_1 priority_list_2 3
BRPOP priority_list_0 priority_list_1 priority_list_2 3
#     set
SADD set_a "set 0" "set 1" "set 2"
SADD set_b "set 1" "set 2" "set 3"
SMEMBERS set_a
SISMEMBER set_a "set 1"
SCARD set_a
SRANDMEMBER set_a 2
SPOP set_a
SDIFF set_a set_b
SINTER set_a set_b
SUNION set_a set_b
SDIFFSTORE difference_set set_a set_b
SINTERSTORE intersection_set set_a set_b
SUNIONSTORE union_set set_a set_b
SREM set_a "set 0" "set 1" "set 2"
#     sorted sets
ZADD sortedSet_a +inf "A" 2E+3 "B" 12 "C" -inf "D"
ZADD sortedSet_b  100 "A"   80 "B" 50 "C"   30 "D"
ZSCORE sortedSet_a "A"
ZRANGE sortedSet_a 0 2
ZRANGE sortedSet_a 0 2 WITHSCORES
ZRANGEBYSCORE sortedSet_a 12 2E+3
ZRANGEBYSCORE sortedSet_a 12 (2E+3
ZRANGEBYSCORE sortedSet_a -inf +inf LIMIT 2 3
ZREVRANGE sortedSet_a 0 2
ZREVRANGEBYSCORE sortedSet_a 12 2E+3
ZREVRANGEBYSCORE sortedSet_a 2E+3 12
ZINCRBY sortedSet_a -3 "C"
ZCARD sortedSet_a
ZCOUNT sortedSet_a 12 2E+3
ZRANK sortedSet_a "C"
ZREVRANK sortedSet_a "C"
ZINTERSTORE intersection_sortedSet 2 sortedSet_a sortedSet_b AGGREGATE SUM
ZINTERSTORE intersection_sortedSet 2 sortedSet_a sortedSet_b AGGREGATE MIN
ZINTERSTORE intersection_sortedSet 2 sortedSet_a sortedSet_b WEIGHTS 1 0.1
ZREM sortedSet_a "A" "B"
ZREMRANGEBYRANK sortedSet_a 0 2
ZREMRANGEBYSCORE sortedSet_a 12 2E+3

# transaction
WATCH set_a set_b
MULTI
SADD set_a "set 0" "set 1" "set 2"
SREM set_b "set 0" "set 1" "set 2"
EXEC

# TTL (time to live)
SET ttl "time to live"
EXPIRE ttl 10
EXPIREAT ttl 1351858600
TTL expire

# sort
LPUSH sortList "left push 0" "left push 2" "left push 1"
SORT sortList ALPHA
SORT sortList ALPHA DESC
SORT sortList ALPHA LIMIT 1 2
SORT sortList ALPHA STORE sortResult
SADD sortSet "set 0" "set 2" "set 1"
SORT sortSet ALPHA
SADD sortHashList sortHash_0 sortHash_1 sortHash_2
HSET sortHash_0 field_0 "0" 
HSET sortHash_0 field_2 "2"
HSET sortHash_0 field_1 "1"
HSET sortHash_1 field_0 "1" 
HSET sortHash_1 field_2 "0"
HSET sortHash_1 field_1 "2"
HSET sortHash_2 field_0 "2" 
HSET sortHash_2 field_2 "1"
HSET sortHash_2 field_1 "0"
SORT sortHashList BY *->field_2
SORT sortHashList BY *->field_2 GET # GET *->field_1

# publish / subscribe
<< redis client subscribe>>SUBSCRIBE channel_0
<< redis client psubscribe>>PSUBSCRIBE channel_?
<< redis client publish>>PUBLISH channel_0 "publish_subscribe"

