<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd">

	<!-- job -->
	<batch:job id="flatFileFixedLengthJob">
		<batch:step id="flatFileFixedLengthStep">
			<tasklet>
				<chunk reader="flatFileFixedLengthItemReader" writer="flatFileFixedLengthItemWriter"
					commit-interval="1">
				</chunk>
			</tasklet>
		</batch:step>
	</batch:job>

	<!-- reader -->
	<bean id="flatFileFixedLengthItemReader" class="org.springframework.batch.item.file.FlatFileItemReader"
		scope="step">
		<property name="encoding" value="#{jobParameters['encoding']}" />
		<property name="linesToSkip" value="#{jobParameters['linesToSkip']}" />
		<property name="strict" value="#{jobParameters['strict']}" />
		<property name="resource" value="file:#{jobParameters['inputResource']}" />
		<property name="comments" value="#{jobParameters['comments']}"></property>
		<property name="bufferedReaderFactory" ref="flatFileFixedLengthDefaultBufferedReaderFactory"></property>
		<property name="lineMapper" ref="flatFileFixedLengthDefaultLineMapper" />
		<property name="recordSeparatorPolicy" ref="flatFileFixedLengthDefaultRecordSeparatorPolicy"></property>
		<property name="skippedLinesCallback" ref="flatFileFixedLengthLineCallbackHandler"></property>
	</bean>

	<!-- writer -->
	<bean id="flatFileFixedLengthItemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter"
		scope="step">
		<property name="appendAllowed" value="#{jobParameters['appendAllowed']}" />
		<property name="encoding" value="#{jobParameters['encoding']}" />
		<property name="lineSeparator" value="#{jobParameters['lineSeparator']}" />
		<property name="saveState" value="#{jobParameters['saveState']}" />
		<property name="shouldDeleteIfEmpty" value="#{jobParameters['shouldDeleteIfEmpty']}" />
		<property name="shouldDeleteIfExists" value="#{jobParameters['shouldDeleteIfExists']}" />
		<property name="transactional" value="#{jobParameters['transactional']}" />
		<property name="resource" value="file:#{jobParameters['outputResource']}" />
		<property name="lineAggregator" ref="flatFileFixedLengthLineAggregator" />
		<property name="headerCallback" ref="flatFileFixedLengthFlatFileHeaderCallback" />
		<property name="footerCallback" ref="flatFileFixedLengthFlatFileFooterCallback" />
	</bean>

	<!-- callbackHandler -->
	<bean id="flatFileFixedLengthLineCallbackHandler"
		class="idv.hsiehpinghan.springbatchassistant.handler.FlatFileLineCallbackHandler"></bean>

	<!-- bufferedReaderFactory -->
	<bean id="flatFileFixedLengthDefaultBufferedReaderFactory"
		class="org.springframework.batch.item.file.DefaultBufferedReaderFactory"></bean>

	<!-- callback -->
	<bean id="flatFileFixedLengthFlatFileHeaderCallback"
		class="idv.hsiehpinghan.springbatchassistant.callback.FlatFileFlatFileHeaderCallback">
	</bean>
	<bean id="flatFileFixedLengthFlatFileFooterCallback"
		class="idv.hsiehpinghan.springbatchassistant.callback.FlatFileFlatFileFooterCallback">
	</bean>

	<!-- separatorPolicy -->
	<bean id="flatFileFixedLengthDefaultRecordSeparatorPolicy"
		class="org.springframework.batch.item.file.separator.DefaultRecordSeparatorPolicy"></bean>

	<!-- lineMapper -->
	<bean id="flatFileFixedLengthDefaultLineMapper"
		class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
		<property name="lineTokenizer" ref="flatFileFixedLengthDelimitedLineTokenizer">
		</property>
		<property name="fieldSetMapper" ref="flatFileFixedLengthDeanWrapperFieldSetMapper">
		</property>
	</bean>

	<!-- lineTokenizer -->
	<bean id="flatFileFixedLengthDelimitedLineTokenizer"
		class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
		<property name="names" value="longValue,stringValue" />
		<property name="columns" value="1,2-9"/>
	</bean>

	<!-- fieldSetMapper -->
	<bean id="flatFileFixedLengthDeanWrapperFieldSetMapper"
		class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
		<property name="prototypeBeanName" value="flatFileFixedLengthFlatFileVo"></property>
	</bean>

	<!-- lineAggregator -->
	<bean id="flatFileFixedLengthLineAggregator"
		class="org.springframework.batch.item.file.transform.FormatterLineAggregator">
		<property name="fieldExtractor" ref="flatFileFixedLengthBeanWrapperFieldExtractor"></property>
		<property name="format" value="%5.5s|%-10.10s|" />
	</bean>

	<!-- fieldExtractor -->
	<bean id="flatFileFixedLengthBeanWrapperFieldExtractor"
		class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
		<property name="names" value="longValue,stringValue" />
	</bean>

	<!-- vo -->
	<bean id="flatFileFixedLengthFlatFileVo" class="idv.hsiehpinghan.springbatchassistant.vo.FlatFileVo"
		scope="prototype" />
</beans>
